name: Qdrant Health

'on':
  push:
    branches: [ "main", "develop", "feature/**" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * *"  # diário às 09:00 BRT (12:00 UTC)

jobs:
  health-check:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show Docker versions
        run: |
          docker version
          docker compose version || true

      - name: Ensure compose tools available
        run: |
          # GitHub-hosted runners provide docker compose; avoid installing docker-compose-plugin here
          docker compose version || true
          jq --version || true

      - name: Build Qdrant image if needed
        run: |
          # Se existir services/qdrant/Dockerfile, usa build; senão, segue com a imagem padrão do compose
          if [ -f services/qdrant/Dockerfile ]; then
            docker compose build qdrant
          else
            echo "No custom Qdrant Dockerfile found; using compose image as-is."
          fi

      - name: Up Qdrant
        run: |
          docker compose up -d qdrant
          docker ps

      - name: Wait for healthy
        run: |
          set -e
          ATTEMPTS=40
          SLEEP=5
          NAME="aurora-qdrant"
          for i in $(seq 1 $ATTEMPTS); do
            STATUS=$(docker inspect -f '{{.State.Health.Status}}' "$NAME" 2>/dev/null || echo "starting")
            echo "Attempt $i/$ATTEMPTS: $STATUS"
            if [ "$STATUS" = "healthy" ]; then
              break
            fi
            sleep $SLEEP
          done
          test "$STATUS" = "healthy"

      - name: Hit /collections
        run: |
          curl -fsS http://localhost:6333/collections | jq .

      - name: Dump logs on failure
        if: failure()
        run: |
          docker logs aurora-qdrant || true
          docker compose ps
          docker compose logs --no-color > qdrant-compose.log || true

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: qdrant-logs
          path: |
            qdrant-compose.log

      - name: Teardown
        if: always()
        run: |
          docker compose down -v
