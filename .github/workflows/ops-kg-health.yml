---
name: Ops - KG Health
on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *"
jobs:
  health:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      AURA_NEO4J_URI: ${{ secrets.AURA_NEO4J_URI }}
      AURA_NEO4J_USERNAME: ${{ secrets.AURA_NEO4J_USERNAME }}
      AURA_NEO4J_PASSWORD: ${{ secrets.AURA_NEO4J_PASSWORD }}
      QDRANT_URL: ${{ vars.QDRANT_URL }}
      KAFKA_BROKER: ${{ vars.KAFKA_BROKER }}
      SCHEMA_REGISTRY_URL: ${{ vars.SCHEMA_REGISTRY_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Quick health checks
        shell: bash
        run: |
          set -euo pipefail
          echo "Neo4j: ${AURA_NEO4J_URI:-unset} (user=${AURA_NEO4J_USERNAME:-unset})"
          echo "Qdrant: ${QDRANT_URL:-unset}"
          echo "Kafka : ${KAFKA_BROKER:-unset}"
          echo "SR    : ${SCHEMA_REGISTRY_URL:-unset}"

          cat > health_check.py <<'PY'
          import os, sys, urllib.request

          TARGETS = ("QDRANT_URL", "SCHEMA_REGISTRY_URL")
          exit_code = 0

          for name in TARGETS:
              url = os.environ.get(name)
              if not url:
                  print(f"[WARN] {name} vazio")
                  continue
              try:
                  with urllib.request.urlopen(url, timeout=5) as r:
                      print(f"[OK] {name} -> {r.status}")
              except Exception as e:
                  print(f"[FAIL] {name}: {e}")
                  exit_code = 1

          if exit_code:
              sys.exit(exit_code)
          print("[OK] checks b√°sicos executados")
          PY

          python3 health_check.py
