name: ci
on:
  push:
    branches: [main, develop, ops/**, feature/**]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: actions/cache@v4
        id: cache-pip
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/pyproject.toml', '**/requirements*.txt') }}
          restore-keys: pip-${{ runner.os }}-
      - name: Install base tooling
        run: |
          python -m pip install --upgrade pip
          pip install -U ruff pyright pytest pytest-cov pre-commit

  guard-duplicates:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Duplicate root guard
        run: python tools/check_duplicate_packages.py

  lint-type:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Ruff (lint)
        run: ruff check .
      - name: Ruff (format check)
        run: ruff format --check .
      - name: Pyright (type-check)
        run: pyright

  unit-tests:
    needs: [guard-duplicates, lint-type]
    runs-on: ubuntu-latest

    services:
      qdrant:
        image: qdrant/qdrant:v1.7.4
        ports:
          - 6333:6333
        options: >-
          --health-cmd="curl -fsS http://localhost:6333/ready || exit 1"
          --health-interval=5s --health-timeout=2s --health-retries=12

    env:
      QDRANT_URL: http://localhost:6333
      ENABLE_QDRANT_TESTS: "1"
      ENABLE_NET_TESTS: "1"

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip install requests

      - name: Install Playwright browsers
        if: env.ENABLE_NET_TESTS == '1'
        run: |
          python -m pip install playwright
          python -m playwright install --with-deps chromium

      - name: Wait for Qdrant
        run: |
          for i in {1..60}; do
            curl -fsS http://localhost:6333/ready && exit 0 || sleep 1
          done
          echo "Qdrant n√£o ficou pronto a tempo" && exit 1

      - name: PyTest
        run: |
          pytest -q --maxfail=1 --disable-warnings \
            --cov=aurora_platform --cov-report=xml:coverage.xml
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml
