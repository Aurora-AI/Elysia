---
name: CI
on:
  push:
    branches: [main, develop, feat/**, fix/**]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-tests:
    name: Lint & Unit Tests (py ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            **/pyproject.toml
            **/poetry.lock
      - name: Install Poetry
        run: pipx install poetry==1.8.3
      - name: Install deps
        run: |
          poetry install --no-interaction --no-ansi --with dev
      - name: Ruff (if configured)
        run: |
          if poetry run ruff --version >/dev/null 2>&1; then
            poetry run ruff check .
          else
            echo "ruff not configured; skipping."
          fi
      - name: PyTest (coverage + junit)
        run: |
          poetry run pytest -q --maxfail=1 --disable-warnings \
            --cov=. --cov-report=term-missing:skip-covered \
            --cov-report=xml:coverage.xml \
            --junit-xml=pytest-report.xml
      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
          if-no-files-found: warn
      - name: Upload junit artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ matrix.python-version }}
          path: pytest-report.xml
          if-no-files-found: warn
