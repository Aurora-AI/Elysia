---
name: CI - DocParser Smoke
on:
  push:
    branches: [main, develop, feat/**, fix/**]
  pull_request:
    branches: [main, develop]
jobs:
  smoke-docparser:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-

      - name: Install Poetry
        run: pipx install poetry==1.8.3

      - name: Install project (no dev if lock exists)
        run: |
          poetry config virtualenvs.create true
          poetry install --no-interaction --no-ansi
        working-directory: .

      - name: Run DocParser smoke
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          if poetry run python -m aurora_docparser.smoke 2>/dev/null; then
            echo "DocParser smoke âœ…"
          else
            echo "Fallback smoke: import package and print version"
            cat <<'PY' | poetry run python -
            import importlib, sys
            mods = ["aurora_docparser","docparser","src.docparser"]
            ok = False
            for m in mods:
              try:
                mod = importlib.import_module(m)
                print("Imported:", m, getattr(mod, "__version__", "n/a"))
                ok = True
                break
              except Exception:
                pass
            if not ok:
              sys.exit("No docparser module found.")
            PY
          fi
