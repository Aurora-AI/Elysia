from typing import Any, Optional


class BaseTransport:
    ...


class Response:
    status_code: int

    def json(self) -> Any: ...


class HTTPStatusError(Exception):
    ...


class Client:
    def __init__(self, timeout: Optional[float] = ..., base_url: Optional[str] = ...,
                 transport: Optional[Any] = ..., *args: Any, **kwargs: Any) -> None: ...

    def __enter__(self) -> "Client": ...
    def __exit__(self, exc_type: Any, exc: Any, tb: Any) -> None: ...
    def get(self, *args: Any, **kwargs: Any) -> Response: ...
    def post(self, *args: Any, **kwargs: Any) -> Response: ...


class AsyncClient:
    def __init__(self, timeout: Optional[float] = ..., base_url: Optional[str] = ...,
                 transport: Optional[Any] = ..., *args: Any, **kwargs: Any) -> None: ...

    async def __aenter__(self) -> "AsyncClient": ...
    async def __aexit__(self, exc_type: Any, exc: Any, tb: Any) -> None: ...
    async def get(self, *args: Any, **kwargs: Any) -> Response: ...
    async def post(self, *args: Any, **kwargs: Any) -> Response: ...


__all__ = ["Client", "AsyncClient", "Response", "BaseTransport"]
