# Makefile para opera√ß√µes Kafka + KG
.PHONY: kafka-up kafka-down kafka-setup kafka-ui kg-consumer kg-test

kafka-up:
	docker network create aurora-net || true
	docker compose -f infra/docker/docker-compose.kafka.yml up -d
	@echo "üöÄ Kafka stack iniciado"
	@echo "üìä Kafka UI: http://localhost:8082"
	@echo "üîó Schema Registry: http://localhost:8081"

kafka-down:
	docker compose -f infra/docker/docker-compose.kafka.yml down -v

kafka-setup:
	python scripts/kafka_setup.py

kafka-ui:
	@echo "üìä Kafka UI: http://localhost:8082"
	@echo "üîó Schema Registry: http://localhost:8081"

kg-consumer:
	python -m aurora_platform.services.kg_consumer_neo4j

kg-consumer-batch:
	python -m aurora_platform.services.kg_consumer_neo4j_batch

neo4j-constraints:
	@echo "Aplicando constraints Neo4j..."
	@python -c "from py2neo import Graph; g = Graph('bolt://localhost:7687', auth=('neo4j','password')); [g.run(q) for q in open('infra/neo4j/constraints.cypher').read().split(';') if q.strip()]; print('‚úÖ Constraints aplicados')" || echo "‚ö†Ô∏è Neo4j n√£o dispon√≠vel"

kg-test:
	@echo "üß™ Testando KG via API..."
	curl -X POST "http://localhost:8000/kg/upsert-entity" \
		-H "Content-Type: application/json" \
		-d '{"entity_type":"Person","labels":["Advogado"],"properties":{"name":"Jo√£o Silva","oab":"12345"}}'
	@echo ""
	curl -X POST "http://localhost:8000/kg/upsert-relation" \
		-H "Content-Type: application/json" \
		-d '{"from_id":"person-1","to_id":"case-1","rel_type":"REPRESENTS","properties":{"since":"2024-01-01"}}'

kafka-logs:
	docker logs -f aurora-kafka

kafka-topics:
	docker exec aurora-kafka kafka-topics --bootstrap-server localhost:9092 --list

kafka-setup-prod:
	bash infra/kafka/topics-dlq.sh
	bash scripts/schema_compat.sh
	@echo "‚úÖ Setup produ√ß√£o completo"

kg-consumer-batch:
	python -m aurora_platform.services.kg_consumer_neo4j_batch

kafka-compaction:
	@echo "Configurando log compaction..."
	docker exec aurora-kafka kafka-configs --bootstrap-server localhost:9092 --alter \
		--topic kg.entity.upsert --add-config cleanup.policy=compact,min.cleanable.dirty.ratio=0.01,segment.ms=300000
	docker exec aurora-kafka kafka-configs --bootstrap-server localhost:9092 --alter \
		--topic kg.relation.upsert --add-config cleanup.policy=compact,min.cleanable.dirty.ratio=0.01,segment.ms=300000
	@echo "‚úÖ Compaction configurado"
